#:import os os

<RoundedButton@Button>:
    background_color: [0] * 4
    markup: True

    canvas.before:

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "bttn_menu_color.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "bttn_menu_shine.png")
            pos: self.pos
            size: self.size


<RobotoLabel@Label>:
    font_name: os.path.join("assets","fonts","roboto_ligth.ttf")

<CenteredLabel@Label>:
    valign: 'middle'
    halign: 'center'

<BackToMenuButton@RoundedButton>:
    text: 'Menu'
    on_press: app.screen_manager.current = 'menu'

# a label that adjust the text inside it
<AdjustableLabel@Label>:
    text_size: self.parent.width, None

<DisplayBoxBase@BoxLayout>:
    id: display_box
    back_color_img: "None"
    shine_shadow_img: "None"

    canvas.before:
        Rectangle:
            source: os.path.join("assets","images","app_graphics", display_box.back_color_img)
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", display_box.shine_shadow_img)
            pos: self.pos
            size: self.size

<DisplayBox@DisplayBoxBase>:
    orientation: 'vertical'

<DisplayBoxHorizontal@DisplayBoxBase>:
    orientation: 'horizontal'

<Transparent@Widget>:
    background_color: [0] *4

<FunctionButton@Button+Transparent>:
    font_name: os.path.join("assets","fonts","fontawesome-webfont.ttf")
    markup: True
    user_text: ""
    text: "[color=#96875a]" + self.user_text + "[/color]"

    canvas.before:
        Rectangle:
            source: os.path.join("assets","images","app_graphics", "function_btn_border.png")
            pos: self.pos[0] + self.size[0] / 2.0 - min(self.size[0], self.size[1]) / 2.0 , self.pos[1] + self.size[1] / 2.0 - min(self.size[0], self.size[1]) / 2.0
            size: min(self.size[0], self.size[1]), min(self.size[0], self.size[1])

<ShadowLabel>:
    decal: 2, -2
    tint: 0, 0, 0, 1

    canvas.before:
        Color:
            rgba: root.tint

        Rectangle:
            pos:
                int(self.center_x - self.texture_size[0] / 2.) + root.decal[0],\
                int(self.center_y - self.texture_size[1] / 2.) + root.decal[1]

            size: root.texture_size
            texture: root.texture

        Color:
            rgba: 1, 1, 1, 1

<BoardCell@Label+Transparent>:

    font_name: os.path.join("assets","fonts","fontawesome-webfont.ttf")
    font_size: min(self.width, self.height) * 0.65
    background_color:[0] * 4
    text: ""

    canvas.before:
        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_border.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_color.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_int_shadow.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_shine.png")
            pos: self.pos
            size: self.size

<LevelBoardCell@BoxLayout>:
    orientation: 'vertical'

    canvas.before:
        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_border.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_color.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_int_shadow.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: os.path.join("assets","images","app_graphics", "board_btn_shine.png")
            pos: self.pos
            size: self.size

    category_name: "Art"
    items_count: 0

    CenteredLabel:
        size_hint: [1, 0.5]
        markup: True
        font_name: os.path.join("assets","fonts","metamorphous-regular.ttf")
        text: "[color=#96875a]" + root.category_name + "[/color]"

    CenteredLabel:
        size_hint: [1, 0.5]
        markup: True
        font_name: os.path.join("assets","fonts","metamorphous-regular.ttf")
        text: "[color=#76643a]" + str(root.items_count) + " levels[/color]"


<ColoredLabel@Label>:
    id: colored_label

    transparency: 0.5

    canvas.before:
        Color:
            rgba: [0,0,0, colored_label.transparency]

        Rectangle:
            pos: self.pos
            size: self.size

<DescriptionName@BoxLayout>:
    id: descp_name
    orientation: "horizontal"
    name: "Android"
    button_text: ""
    button_callback: None
    transparency: 0.0


    canvas.before:
        Color:
            rgba: [0,0,0, descp_name.transparency]

        Rectangle:
            pos: self.pos
            size: self.size

    CenteredLabel:
        id:item_name_lbl_id
        size_hint: [0.8, 1]
        font_name: os.path.join("assets","fonts","roboto_black.ttf")
        text: descp_name.name
        font_size: min(self.height * 0.8 ,self.width * 0.08)


    Button:
        id: open_descp_bttn
        size_hint: [0.2, 1]
        background_color: [0] * 4
        font_size: self.height * 0.4
        markup: True
        font_name: os.path.join("assets","fonts","fontawesome-webfont.ttf")

        text: "[color=#ffa200] " + descp_name.button_text + " [/color]"
        font_size: self.width * 0.5
        on_press: descp_name.button_callback() if descp_name.button_callback is not None else None

<DescriptionWidget@FloatLayout>:

    id:description_widget
    image:  os.path.join("assets", "images", "items", "android.jpg")

    name_widget: item_name

    canvas.before:
        Rectangle:
            source: os.path.join("assets", "images", "app_graphics", "back_item_cell.png")
            pos: self.pos
            size: self.size

        Rectangle:
            source: self.image
            pos: self.pos
            size: self.size

    Button:
        size_hint: [0.15, 0.15]
        background_color: [0] * 4
        markup: True
        pos: description_widget.pos[0] + description_widget.width * 0.85, description_widget.pos[1] + description_widget.height * 0.85
        text: "[color=#ffa200] X [/color]"
        font_name: os.path.join("assets","fonts","roboto_black.ttf")
        font_size: self.width * 0.5

        canvas.before:
            Color:
                rgba: 0,0,0,1
            Ellipse:
                pos:self.center
                size:self.size

    DescriptionName:
        id: item_name
        size_hint: [0.95, 0.15]
        transparency: 0.5
        pos: description_widget.pos[0] + description_widget.width * 0.025, description_widget.pos[1] + description_widget.height * 0.025
        name: "Android System"
        button_text: ""
        button_callback: description_widget.show_descp
